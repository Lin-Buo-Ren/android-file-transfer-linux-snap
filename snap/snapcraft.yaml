%YAML 1.1
---
# Snapcraft Recipe for Android File Transfer for Linux
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * Snapcraft.yaml reference
#   https://docs.snapcraft.io/snapcraft-yaml-reference/4276
# * The snapcraft syntax
#   https://docs.snapcraft.io/build-snaps/syntax
# * Snap Docs
#   https://docs.snapcraft.io
# * Latest doc topics in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

name: android-file-transfer
summary: Reliable MTP client with minimalistic UI.  It just worksâ„¢.
description: |
  ## Do I need it?

  If you're happy with `gmtp`/`gvfs`/`mtpfs` or any other mtp software, you might not need this software (but give it a try!).

  If you're suffering from crashes, missing tags, album covers, usb freezes and corrupted files, this software is right for you.

  ## Features

  * Simple Qt UI with progress dialogs.
  * FUSE wrapper (If you'd prefer mounting your device), supporting partial read/writes, allowing instant access to your files.
  * No file size limits.
  * Automatically renames album cover to make it visible from media player.
  * USB 'Zerocopy' support found in recent Linux kernel (no user/kernel data copying)
  * No extra dependencies (e.g. `libptp`/`libmtp`).
  * Available as static/shared library.
  * Command line tool (aft-mtp-cli)

  THIS IS NOT AN OFFICIAL DISTRIBUTION, refer the issue tracker for any problems regarding with this snap:
  https://github.com/Lin-Buo-Ren/android-file-transfer-linux-snap/issues

icon: snap/gui/android-file-transfer.svg

#version: determined-by-adopt-info
adopt-info: android-file-transfer

confinement: classic
grade: devel

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interface management - doc - snapcraft.io
# https://docs.snapcraft.io/interface-management/6154
# Supported interfaces - doc - snapcraft.io
# https://docs.snapcraft.io/supported-interfaces/7744
# Non-A/C: Non-autoconnect interface
plugs:
  # For snaps with a graphical user interface:
  desktop:
  desktop-legacy:
  x11:
  unity7:
  wayland:

  # Storage access
  home:
  removable-media: # Non-A/C

  raw-usb:
  system-observe:

#slots:

apps:
  android-file-transfer:
    command: >
      bin/classic-launch
      "${SNAP}"/bin/desktop-launch
      "${SNAP}"/bin/android-file-transfer-launch
      "${SNAP}"/bin/android-file-transfer
    desktop: share/applications/android-file-transfer.desktop
  aft-mtp-cli:
    command: >
      bin/classic-launch
      "${SNAP}"/bin/android-file-transfer-launch
      "${SNAP}"/bin/aft-mtp-cli
  aft-mtp-mount:
    command: >
      bin/classic-launch
      "${SNAP}"/bin/android-file-transfer-launch
      "${SNAP}"/bin/aft-mtp-mount

# Run `snapcraft help sources` for supported keywords on pulling a part's source ingredients
# Run `snapcraft plugins` for supported build helper plugins
# Run `snapcraft help plugins` for supported keywords on building a part
# For `override-*` scriptlets used to modify behavior of certain part's lifecycle phase, check out:
# https://docs.snapcraft.io/scriptlets/4892
parts:
  # Assets from the snap packaging, refer each READMEs under the `snap` folder for more information
  assets:
    source: snap/local
    plugin: dump

    override-build: ./utilities/install-assets.bash

    prime:
    - -utilities
    - -patches

  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-qt4:

  android-file-transfer:
    after:
    - assets # for /snap/local/utilities/patch-desktop-entries

    source: https://github.com/whoozle/android-file-transfer-linux.git
    source-depth: 1

    plugin: cmake
    configflags:
    - -DCMAKE_BUILD_TYPE=Release
    build-packages:
    - build-essential
    - libfuse-dev
    - libmagic-dev
    - libqt4-dev
    - libreadline-dev

    stage-packages:
    - libmagic1

    override-pull: |
      set \
        -o errexit \
        -o nounset

      snapcraftctl pull

      upstream_revision="$(
        git describe \
          --always \
          --dirty=-d \
          --match='v*' \
          --tags
      )"

      packaging_revision="$(
        git -C .. describe \
          --abbrev=4 \
          --always \
          --dirty=-d \
          --match=nothing
      )"

      snapcraftctl set-version \
        "${upstream_revision}"-snap-"${packaging_revision}"

    filesets:
      executables:
      - bin
      library-static:
      - lib/*.a
      resource-desktop-entries:
      - share/applications
      resource-icons:
      - share/icons
      resource-appdata:
      - share/metainfo

    stage:
    - $executables
    - $resource-desktop-entries
    - $resource-icons

    override-stage: |
      set \
        -o errexit \
        -o nounset

      snapcraftctl stage

      utilities/patch-desktop-entries.bash

    prime:
    - $executables
    - $resource-desktop-entries
    - $resource-icons
